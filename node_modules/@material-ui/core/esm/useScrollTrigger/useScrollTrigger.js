import _slicedToArray from "@babel/runtime/helpers/slicedToArray";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
import React from 'react';

function getScrollY(ref) {
  return (ref ? ref.pageYOffset || ref.scrollTop : null) || 0;
}

function defaultTrigger(event, store, options) {
  var _options$disableHyste = options.disableHysteresis,
      disableHysteresis = _options$disableHyste === void 0 ? true : _options$disableHyste,
      _options$threshold = options.threshold,
      threshold = _options$threshold === void 0 ? 100 : _options$threshold;
  var previous = store.current;
  store.current = getScrollY(event && event.currentTarget);

  if (disableHysteresis) {
    if (store.current < previous) {
      return false;
    }

    return store.current > previous && store.current > threshold;
  }

  return store.current > threshold;
}

var defaultTarget = typeof window !== 'undefined' ? window : null;
export default function useScrollTrigger() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var _options$getTrigger = options.getTrigger,
      getTrigger = _options$getTrigger === void 0 ? defaultTrigger : _options$getTrigger,
      _options$target = options.target,
      target = _options$target === void 0 ? defaultTarget : _options$target,
      other = _objectWithoutProperties(options, ["getTrigger", "target"]);

  var store = React.useRef();

  var _React$useState = React.useState(function () {
    return getTrigger(null, store, other);
  }),
      _React$useState2 = _slicedToArray(_React$useState, 2),
      trigger = _React$useState2[0],
      setTrigger = _React$useState2[1];

  React.useEffect(function () {
    var handleScroll = function handleScroll(event) {
      setTrigger(getTrigger(event, store, other));
    };

    target.addEventListener('scroll', handleScroll);
    return function () {
      target.removeEventListener('scroll', handleScroll);
    }; // See Option 3. https://github.com/facebook/react/issues/14476#issuecomment-471199055
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [target, getTrigger, JSON.stringify(other)]);
  return trigger;
}